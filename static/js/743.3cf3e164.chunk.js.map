{"version":3,"file":"static/js/743.3cf3e164.chunk.js","mappings":"0NACA,EAAmC,uCAAnC,EAAkF,4BAAlF,EAA8H,oCAA9H,EAA0K,4BAA1K,EAA8M,4BAA9M,EAAgP,0B,sCCKhPA,IAAAA,OAAAA,KAAqB,CACnBC,SAAU,eAIZ,IAiEA,EAjEqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,QAAQC,IAAIJ,GAETA,GACDJ,IAAAA,OAAAA,QAAwB,yCAkB1B,OACE,iBAAKS,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAA0B,cAC1B,kBAAMC,SAlBS,SAACC,GACpBA,EAAMC,iBAEN,IAIMC,EAAW,CACfC,KALWH,EAAMI,cAAcC,SAASC,SAASC,MAMjDC,MALYR,EAAMI,cAAcC,SAASI,UAAUF,MAMnDG,SALeV,EAAMI,cAAcC,SAASM,aAAaJ,OAQ3DjB,GAASsB,EAAAA,EAAAA,IAAaV,GACvB,EAImCL,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,WACE,0BAAM,cACN,kBACEe,KAAK,OACLV,KAAK,WACLW,YAAY,qBACZC,UAAQ,EACRlB,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,WACE,0BAAM,WACN,kBACEe,KAAK,QACLV,KAAK,YACLW,YAAY,sBACZC,UAAQ,EACRlB,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,WACE,0BAAM,cACN,kBACEe,KAAK,WACLV,KAAK,eACLW,YAAY,yBACZE,UAAW,EACXD,UAAQ,EACRlB,UAAWC,QAGf,mBAAQe,KAAK,SAAShB,UAAWC,EAAjC,SAA0C,kBAInD,C,gICzEM,IAAMmB,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvB5B,EAAc,SAAAwB,GAAK,OAAIA,EAAMK,KAAK/B,KAAf,EAEnBgC,EAAe,SAAAN,GAAK,OAAIA,EAAMO,MAAV,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"register_wrapper\":\"RegisterPage_register_wrapper__Y3ZD2\",\"title\":\"RegisterPage_title__Yjy6g\",\"register_form\":\"RegisterPage_register_form__xpjye\",\"label\":\"RegisterPage_label__R5ZZF\",\"input\":\"RegisterPage_input__9WI6M\",\"btn\":\"RegisterPage_btn__25iGB\"};","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from 'redux/operations';\nimport css from './RegisterPage.module.css'\nimport Notiflix from 'notiflix';\nimport { selectError } from 'redux/selectors';\nNotiflix.Notify.init({\n  position: 'center-top',\n  });\n\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  console.log(error)\n\n  if(error){\n    Notiflix.Notify.warning('A user with this email already exists')\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.userName.value;\n    const email = event.currentTarget.elements.userEmail.value;\n    const password = event.currentTarget.elements.userPassword.value;\n\n    const formData = {\n      name, \n      email, \n      password,\n    };\n\n    dispatch(registerUser(formData));\n  };\n  return (\n    <div className={css.register_wrapper}>\n        <h1 className={css.title}>Register</h1>\n        <form onSubmit={handleSubmit} className={css.register_form}>\n          <label className={css.label}>\n            <span>Username</span>\n            <input \n              type=\"text\" \n              name='userName' \n              placeholder='Enter your name...' \n              required\n              className={css.input}\n            />\n          </label>\n          <label className={css.label}>\n            <span>Email</span>\n            <input \n              type=\"email\" \n              name='userEmail' \n              placeholder='Enter your email...' \n              required\n              className={css.input}\n            />\n          </label>\n          <label className={css.label}>\n            <span>Password</span>\n            <input \n              type=\"password\" \n              name='userPassword' \n              placeholder='Enter your password...'\n              minLength={7} \n              required\n              className={css.input}\n            />\n          </label>\n          <button type='submit' className={css.btn}>Register</button>\n        </form>\n    </div>\n  )\n}\n\nexport default RegisterPage","\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.auth.error;\n\nexport const selectFilter = state => state.filter;"],"names":["Notiflix","position","dispatch","useDispatch","error","useSelector","selectError","console","log","className","css","onSubmit","event","preventDefault","formData","name","currentTarget","elements","userName","value","email","userEmail","password","userPassword","registerUser","type","placeholder","required","minLength","selectContacts","state","contacts","items","selectIsLoading","isLoading","auth","selectFilter","filter"],"sourceRoot":""}