{"version":3,"file":"static/js/169.44c968d8.chunk.js","mappings":"0NACA,EAAgC,iCAAhC,EAAyE,yBAAzE,EAA+G,8BAA/G,EAAqJ,yBAArJ,EAAsL,yBAAtL,EAAqN,uB,sCC0DrN,EApDkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,OACHC,EAAAA,EAAAA,IAAYC,EAAAA,KAGxBC,IAAAA,OAAAA,QAAwB,2DAgB1B,OACE,iBAAKC,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAA0B,WAC1B,kBAAMC,SAhBS,SAACC,GACpBA,EAAMC,iBAEN,IAGMC,EAAW,CACfC,MAJYH,EAAMI,cAAcC,SAASC,UAAUC,MAKnDC,SAJeR,EAAMI,cAAcC,SAASI,aAAaF,OAO3Df,GAASkB,EAAAA,EAAAA,IAAUR,GACpB,EAImCL,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,WACE,0BAAM,WACN,kBACEa,KAAK,QACLC,KAAK,YACLC,YAAY,sBACZC,UAAQ,EACRjB,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,WACE,0BAAM,cACN,kBACEa,KAAK,WACLC,KAAK,eACLC,YAAY,yBACZE,UAAW,EACXD,UAAQ,EACRjB,UAAWC,QAGf,mBAAQa,KAAK,SAASd,UAAWC,EAAjC,SAA0C,eAInD,C,gICxDM,IAAMkB,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvB1B,EAAc,SAAAsB,GAAK,OAAIA,EAAMK,KAAKC,KAAf,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login_wrapper\":\"LoginPage_login_wrapper__d7Re8\",\"title\":\"LoginPage_title__RBt-o\",\"login_form\":\"LoginPage_login_form__uF2X+\",\"label\":\"LoginPage_label__eihZ8\",\"input\":\"LoginPage_input__-T8t7\",\"btn\":\"LoginPage_btn__oVbh7\"};","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from 'redux/operations';\nimport css from './LoginPage.module.css'\nimport { selectError } from 'redux/selectors';\nimport Notiflix from 'notiflix';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  if(error){\n    Notiflix.Notify.warning('Incorrect email or password, please check and try again')\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const email = event.currentTarget.elements.userEmail.value;\n    const password = event.currentTarget.elements.userPassword.value;\n\n    const formData = {\n      email, \n      password,\n    };\n\n    dispatch(loginUser(formData));\n  };\n  return (\n    <div className={css.login_wrapper}>\n        <h1 className={css.title}>Login</h1>\n        <form onSubmit={handleSubmit} className={css.login_form}>\n          <label className={css.label}>\n            <span>Email</span>\n            <input \n              type=\"email\" \n              name='userEmail' \n              placeholder='Enter your email...' \n              required\n              className={css.input}\n            />\n          </label>\n          <label className={css.label}>\n            <span>Password</span>\n            <input \n              type=\"password\" \n              name='userPassword' \n              placeholder='Enter your password...'\n              minLength={7} \n              required\n              className={css.input}\n            />\n          </label>\n          <button type='submit' className={css.btn}>Login</button>\n        </form>\n    </div>\n  )\n}\n\nexport default LoginPage","\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.auth.error;\n\nexport const selectFilter = state => state.filter;"],"names":["dispatch","useDispatch","useSelector","selectError","Notiflix","className","css","onSubmit","event","preventDefault","formData","email","currentTarget","elements","userEmail","value","password","userPassword","loginUser","type","name","placeholder","required","minLength","selectContacts","state","contacts","items","selectIsLoading","isLoading","auth","error","selectFilter","filter"],"sourceRoot":""}